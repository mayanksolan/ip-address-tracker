{"version":3,"sources":["App.js","index.js"],"names":["App","useState","position","setPosition","ip","setIp","locationData","setLocationData","fetchLocationDetails","fetch","process","then","res","json","location","lat","lng","ChangeView","center","zoom","useMap","setView","useEffect","IPv4","className","style","paddingTop","type","placeholder","onChange","e","target","value","onClick","xmlns","width","height","fill","stroke","strokeWidth","d","city","region","timezone","isp","MapContainer","TileLayer","attribution","url","Marker","Popup","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAsFeA,EAhFH,WAAO,IAAD,QACgBC,mBAAS,CAAC,EAAG,IAD7B,mBACTC,EADS,KACCC,EADD,OAEIF,mBAAS,IAFb,mBAETG,EAFS,KAELC,EAFK,OAGwBJ,mBAAS,MAHjC,mBAGTK,EAHS,KAGKC,EAHL,KAKVC,EAAuB,WACNC,MAAM,uCAAD,OARdC,mCAQc,sBAA6DN,IAEpFO,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACLL,EAAgBK,GAChBT,EAAY,CAACS,EAAIE,SAASC,IAAKH,EAAIE,SAASE,UAiBlD,SAASC,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAG5B,OAFYC,cACRC,QAAQH,EAAQC,GACb,KAGT,OAnBAG,qBAAU,WACYb,MAAM,oCAEvBE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACLP,EAAMO,EAAIW,WAEb,IAEHD,qBAAU,WACRd,MACC,CAACJ,IASF,qBAAKoB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,sBAAKA,UAAU,YAAf,UACE,qBAAKC,MAAO,CAAEC,WAAY,QAA1B,gCACA,sBAAKF,UAAU,aAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,uBAAOG,KAAK,OAAOC,YAAaxB,EAAIoB,UAAU,kBAAkBK,SAAU,SAACC,GAAD,OAAOzB,EAAMyB,EAAEC,OAAOC,UAChG,wBAAQC,QAASzB,EAAsBgB,UAAU,oBAAjD,SACE,qBAAKU,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAA1D,SACE,sBAAMC,KAAK,OAAOC,OAAO,OAAOC,YAAY,IAAIC,EAAE,wBAIxD,sBAAKhB,UAAU,eAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,YAAf,wBACA,qBAAKA,UAAU,aAAf,gBAA6BlB,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAcF,QAE7C,sBAAKoB,UAAU,oBAAf,UACE,qBAAKA,UAAU,YAAf,sBACA,qBAAKA,UAAU,aAAf,oBAA4C,OAAZlB,QAAY,IAAZA,OAAA,EAAAA,EAAcQ,UAAd,iBAA4BR,QAA5B,IAA4BA,GAA5B,UAA4BA,EAAcQ,gBAA1C,aAA4B,EAAwB2B,KAApD,oBAA6DnC,QAA7D,IAA6DA,GAA7D,UAA6DA,EAAcQ,gBAA3E,aAA6D,EAAwB4B,QAAW,SAElI,sBAAKlB,UAAU,oBAAf,UACE,qBAAKA,UAAU,YAAf,sBACA,qBAAKA,UAAU,aAAf,oBAA4C,OAAZlB,QAAY,IAAZA,OAAA,EAAAA,EAAcQ,UAAd,qBAAgCR,QAAhC,IAAgCA,GAAhC,UAAgCA,EAAcQ,gBAA9C,aAAgC,EAAwB6B,UAAa,SAEvG,sBAAKnB,UAAU,oBAAf,UACE,qBAAKA,UAAU,YAAf,iBACA,qBAAKA,UAAU,aAAf,UAAyC,OAAZlB,QAAY,IAAZA,OAAA,EAAAA,EAAcsC,MAAO,iBAK1D,eAACC,EAAA,EAAD,CAAc3B,OAAQhB,EAAUiB,KAAM,GAAtC,UACE,cAACF,EAAD,CAAYC,OAAQhB,EAAUiB,KAAM,KACpC,cAAC2B,EAAA,EAAD,CAAWC,YAAY,yEAA2EC,IAAI,uDACtG,cAACC,EAAA,EAAD,CAAQ/C,SAAUA,EAAlB,SACE,cAACgD,EAAA,EAAD,iDCzEZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2ef17bb7.chunk.js","sourcesContent":["import \"./App.css\";\nimport { MapContainer, Marker, TileLayer, Popup, useMapEvents, useMap } from \"react-leaflet\";\nimport { useEffect, useState } from \"react\";\n\nconst API_KEY = process.env.REACT_APP_GEO_API_KEY;\n\nconst App = () => {\n  const [position, setPosition] = useState([0, 0]);\n  const [ip, setIp] = useState(\"\");\n  const [locationData, setLocationData] = useState(null);\n\n  const fetchLocationDetails = () => {\n    const fetchPromise = fetch(`https://geo.ipify.org/api/v1?apiKey=${API_KEY}&ipAddress=${ip}`);\n    fetchPromise\n      .then((res) => res.json())\n      .then((res) => {\n        setLocationData(res);\n        setPosition([res.location.lat, res.location.lng]);\n      });\n  };\n\n  useEffect(() => {\n    const myIpPromise = fetch(\"https://geolocation-db.com/json/\");\n    myIpPromise\n      .then((res) => res.json())\n      .then((res) => {\n        setIp(res.IPv4);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetchLocationDetails();\n  }, [ip]);\n\n  function ChangeView({ center, zoom }) {\n    const map = useMap();\n    map.setView(center, zoom);\n    return null;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"head-area\">\n          <div style={{ paddingTop: \"2rem\" }}>IP Address Tracker</div>\n          <div className=\"head-input\">\n            <div className=\"head-input-input\">\n              <input type=\"text\" placeholder={ip} className=\"head-input-text\" onChange={(e) => setIp(e.target.value)}></input>\n              <button onClick={fetchLocationDetails} className=\"head-input-button\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"14\">\n                  <path fill=\"none\" stroke=\"#FFF\" strokeWidth=\"3\" d=\"M2 1l6 6-6 6\" />\n                </svg>\n              </button>\n            </div>\n            <div className=\"head-details\">\n              <div className=\"details-item\">\n                <div className=\"item-type\">IP ADDRESS</div>\n                <div className=\"item-value\">{locationData?.ip}</div>\n              </div>\n              <div className=\"details-item brdr\">\n                <div className=\"item-type\">LOCATION</div>\n                <div className=\"item-value\">{`${locationData?.location ? `${locationData?.location?.city}, ${locationData?.location?.region}` : \"\"}`}</div>\n              </div>\n              <div className=\"details-item brdr\">\n                <div className=\"item-type\">TIMEZONE</div>\n                <div className=\"item-value\">{`${locationData?.location ? `UTC ${locationData?.location?.timezone}` : \"\"}`}</div>\n              </div>\n              <div className=\"details-item brdr\">\n                <div className=\"item-type\">ISP</div>\n                <div className=\"item-value\">{locationData?.isp || \"\"}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <MapContainer center={position} zoom={13}>\n          <ChangeView center={position} zoom={13} />\n          <TileLayer attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n          <Marker position={position}>\n            <Popup>This is the IP Location</Popup>\n          </Marker>\n        </MapContainer>\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}